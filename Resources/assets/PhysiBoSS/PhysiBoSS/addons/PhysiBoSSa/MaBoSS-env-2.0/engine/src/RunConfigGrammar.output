Terminals unused in grammar

    NODE


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: decl
    2                 | translation_unit decl

    3 decl: var_decl
    4     | runconfig_decl
    5     | node_attr_decl
    6     | ';'

    7 runconfig_decl: SYMBOL '=' expression ';'

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';'
    9               | symbol_istate_list '.' SYMBOL '=' istate_expression_list ';'

   10 symbol_istate_list: '[' symbol_list ']'

   11 symbol_list: SYMBOL
   12            | symbol_list ',' SYMBOL

   13 istate_expression_list: istate_expression
   14                       | istate_expression_list ',' istate_expression

   15 istate_expression: primary_expression '[' expression_list ']'

   16 expression_list: primary_expression
   17                | expression_list ',' primary_expression

   18 var_decl: VARIABLE '=' expression ';'

   19 primary_expression: INTEGER
   20                   | DOUBLE
   21                   | VARIABLE
   22                   | '(' expression ')'

   23 argument_expression_list: expression
   24                         | argument_expression_list ',' expression

   25 postfix_expression: primary_expression
   26                   | SYMBOL '(' argument_expression_list ')'
   27                   | SYMBOL '(' ')'

   28 unary_expression: postfix_expression
   29                 | '+' unary_expression
   30                 | '-' unary_expression
   31                 | '!' unary_expression
   32                 | LOGNOT unary_expression

   33 multiplicative_expression: unary_expression
   34                          | multiplicative_expression '*' unary_expression
   35                          | multiplicative_expression '/' unary_expression

   36 additive_expression: multiplicative_expression
   37                    | additive_expression '+' multiplicative_expression
   38                    | additive_expression '-' multiplicative_expression

   39 relational_expression: additive_expression
   40                      | relational_expression '<' additive_expression
   41                      | relational_expression '>' additive_expression
   42                      | relational_expression LTEQ additive_expression
   43                      | relational_expression GTEQ additive_expression

   44 equality_expression: relational_expression
   45                    | equality_expression EQUAL relational_expression
   46                    | equality_expression NOT_EQUAL relational_expression

   47 logical_and_expression: equality_expression
   48                       | logical_and_expression LOGAND equality_expression

   49 logical_or_expression: logical_and_expression
   50                      | logical_or_expression LOGOR logical_and_expression

   51 logical_xor_expression: logical_or_expression
   52                       | logical_xor_expression LOGXOR logical_or_expression
   53                       | logical_xor_expression '^' logical_or_expression

   54 conditional_expression: logical_xor_expression
   55                       | logical_xor_expression '?' expression ':' conditional_expression

   56 expression: conditional_expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 31
    '(' (40) 22 26 27
    ')' (41) 22 26 27
    '*' (42) 34
    '+' (43) 29 37
    ',' (44) 12 14 17 24
    '-' (45) 30 38
    '.' (46) 8 9
    '/' (47) 35
    ':' (58) 55
    ';' (59) 6 7 8 9 18
    '<' (60) 40
    '=' (61) 7 8 9 18
    '>' (62) 41
    '?' (63) 55
    '[' (91) 10 15
    ']' (93) 10 15
    '^' (94) 53
    error (256)
    VARIABLE <str> (258) 18 21
    SYMBOL <str> (259) 7 8 9 11 12 26 27
    DOUBLE <d> (260) 20
    INTEGER <l> (261) 19
    LOGAND (262) 48
    LOGOR (263) 50
    LOGXOR (264) 52
    LOGNOT (265) 32
    EQUAL (266) 45
    NOT_EQUAL (267) 46
    NODE (268)
    GTEQ (269) 43
    LTEQ (270) 42


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    translation_unit (35)
        on left: 1 2
        on right: 0 2
    decl (36)
        on left: 3 4 5 6
        on right: 1 2
    runconfig_decl (37)
        on left: 7
        on right: 4
    node_attr_decl (38)
        on left: 8 9
        on right: 5
    symbol_istate_list <node_list> (39)
        on left: 10
        on right: 9
    symbol_list <node_list> (40)
        on left: 11 12
        on right: 10 12
    istate_expression_list <istate_expr_list> (41)
        on left: 13 14
        on right: 9 14
    istate_expression <istate_expr> (42)
        on left: 15
        on right: 13 14
    expression_list <expr_list> (43)
        on left: 16 17
        on right: 15 17
    var_decl (44)
        on left: 18
        on right: 3
    primary_expression <expr> (45)
        on left: 19 20 21 22
        on right: 15 16 17 25
    argument_expression_list <arg_list> (46)
        on left: 23 24
        on right: 24 26
    postfix_expression <expr> (47)
        on left: 25 26 27
        on right: 28
    unary_expression <expr> (48)
        on left: 28 29 30 31 32
        on right: 29 30 31 32 33 34 35
    multiplicative_expression <expr> (49)
        on left: 33 34 35
        on right: 34 35 36 37 38
    additive_expression <expr> (50)
        on left: 36 37 38
        on right: 37 38 39 40 41 42 43
    relational_expression <expr> (51)
        on left: 39 40 41 42 43
        on right: 40 41 42 43 44 45 46
    equality_expression <expr> (52)
        on left: 44 45 46
        on right: 45 46 47 48
    logical_and_expression <expr> (53)
        on left: 47 48
        on right: 48 49 50
    logical_or_expression <expr> (54)
        on left: 49 50
        on right: 50 51 52 53
    logical_xor_expression <expr> (55)
        on left: 51 52 53
        on right: 52 53 54 55
    conditional_expression <expr> (56)
        on left: 54 55
        on right: 55 56
    expression <expr> (57)
        on left: 56
        on right: 7 8 18 22 23 24 55


State 0

    0 $accept: . translation_unit $end

    VARIABLE  shift, and go to state 1
    SYMBOL    shift, and go to state 2
    ';'       shift, and go to state 3
    '['       shift, and go to state 4

    translation_unit    go to state 5
    decl                go to state 6
    runconfig_decl      go to state 7
    node_attr_decl      go to state 8
    symbol_istate_list  go to state 9
    var_decl            go to state 10


State 1

   18 var_decl: VARIABLE . '=' expression ';'

    '='  shift, and go to state 11


State 2

    7 runconfig_decl: SYMBOL . '=' expression ';'
    8 node_attr_decl: SYMBOL . '.' SYMBOL '=' expression ';'

    '='  shift, and go to state 12
    '.'  shift, and go to state 13


State 3

    6 decl: ';' .

    $default  reduce using rule 6 (decl)


State 4

   10 symbol_istate_list: '[' . symbol_list ']'

    SYMBOL  shift, and go to state 14

    symbol_list  go to state 15


State 5

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . decl

    $end      shift, and go to state 16
    VARIABLE  shift, and go to state 1
    SYMBOL    shift, and go to state 2
    ';'       shift, and go to state 3
    '['       shift, and go to state 4

    decl                go to state 17
    runconfig_decl      go to state 7
    node_attr_decl      go to state 8
    symbol_istate_list  go to state 9
    var_decl            go to state 10


State 6

    1 translation_unit: decl .

    $default  reduce using rule 1 (translation_unit)


State 7

    4 decl: runconfig_decl .

    $default  reduce using rule 4 (decl)


State 8

    5 decl: node_attr_decl .

    $default  reduce using rule 5 (decl)


State 9

    9 node_attr_decl: symbol_istate_list . '.' SYMBOL '=' istate_expression_list ';'

    '.'  shift, and go to state 18


State 10

    3 decl: var_decl .

    $default  reduce using rule 3 (decl)


State 11

   18 var_decl: VARIABLE '=' . expression ';'

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 39


State 12

    7 runconfig_decl: SYMBOL '=' . expression ';'

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 40


State 13

    8 node_attr_decl: SYMBOL '.' . SYMBOL '=' expression ';'

    SYMBOL  shift, and go to state 41


State 14

   11 symbol_list: SYMBOL .

    $default  reduce using rule 11 (symbol_list)


State 15

   10 symbol_istate_list: '[' symbol_list . ']'
   12 symbol_list: symbol_list . ',' SYMBOL

    ']'  shift, and go to state 42
    ','  shift, and go to state 43


State 16

    0 $accept: translation_unit $end .

    $default  accept


State 17

    2 translation_unit: translation_unit decl .

    $default  reduce using rule 2 (translation_unit)


State 18

    9 node_attr_decl: symbol_istate_list '.' . SYMBOL '=' istate_expression_list ';'

    SYMBOL  shift, and go to state 44


State 19

   21 primary_expression: VARIABLE .

    $default  reduce using rule 21 (primary_expression)


State 20

   26 postfix_expression: SYMBOL . '(' argument_expression_list ')'
   27                   | SYMBOL . '(' ')'

    '('  shift, and go to state 45


State 21

   20 primary_expression: DOUBLE .

    $default  reduce using rule 20 (primary_expression)


State 22

   19 primary_expression: INTEGER .

    $default  reduce using rule 19 (primary_expression)


State 23

   32 unary_expression: LOGNOT . unary_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression  go to state 28
    postfix_expression  go to state 29
    unary_expression    go to state 46


State 24

   22 primary_expression: '(' . expression ')'

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 47


State 25

   29 unary_expression: '+' . unary_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression  go to state 28
    postfix_expression  go to state 29
    unary_expression    go to state 48


State 26

   30 unary_expression: '-' . unary_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression  go to state 28
    postfix_expression  go to state 29
    unary_expression    go to state 49


State 27

   31 unary_expression: '!' . unary_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression  go to state 28
    postfix_expression  go to state 29
    unary_expression    go to state 50


State 28

   25 postfix_expression: primary_expression .

    $default  reduce using rule 25 (postfix_expression)


State 29

   28 unary_expression: postfix_expression .

    $default  reduce using rule 28 (unary_expression)


State 30

   33 multiplicative_expression: unary_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 31

   34 multiplicative_expression: multiplicative_expression . '*' unary_expression
   35                          | multiplicative_expression . '/' unary_expression
   36 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 36 (additive_expression)


State 32

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   39 relational_expression: additive_expression .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 39 (relational_expression)


State 33

   40 relational_expression: relational_expression . '<' additive_expression
   41                      | relational_expression . '>' additive_expression
   42                      | relational_expression . LTEQ additive_expression
   43                      | relational_expression . GTEQ additive_expression
   44 equality_expression: relational_expression .

    GTEQ  shift, and go to state 55
    LTEQ  shift, and go to state 56
    '<'   shift, and go to state 57
    '>'   shift, and go to state 58

    $default  reduce using rule 44 (equality_expression)


State 34

   45 equality_expression: equality_expression . EQUAL relational_expression
   46                    | equality_expression . NOT_EQUAL relational_expression
   47 logical_and_expression: equality_expression .

    EQUAL      shift, and go to state 59
    NOT_EQUAL  shift, and go to state 60

    $default  reduce using rule 47 (logical_and_expression)


State 35

   48 logical_and_expression: logical_and_expression . LOGAND equality_expression
   49 logical_or_expression: logical_and_expression .

    LOGAND  shift, and go to state 61

    $default  reduce using rule 49 (logical_or_expression)


State 36

   50 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   51 logical_xor_expression: logical_or_expression .

    LOGOR  shift, and go to state 62

    $default  reduce using rule 51 (logical_xor_expression)


State 37

   52 logical_xor_expression: logical_xor_expression . LOGXOR logical_or_expression
   53                       | logical_xor_expression . '^' logical_or_expression
   54 conditional_expression: logical_xor_expression .
   55                       | logical_xor_expression . '?' expression ':' conditional_expression

    LOGXOR  shift, and go to state 63
    '^'     shift, and go to state 64
    '?'     shift, and go to state 65

    $default  reduce using rule 54 (conditional_expression)


State 38

   56 expression: conditional_expression .

    $default  reduce using rule 56 (expression)


State 39

   18 var_decl: VARIABLE '=' expression . ';'

    ';'  shift, and go to state 66


State 40

    7 runconfig_decl: SYMBOL '=' expression . ';'

    ';'  shift, and go to state 67


State 41

    8 node_attr_decl: SYMBOL '.' SYMBOL . '=' expression ';'

    '='  shift, and go to state 68


State 42

   10 symbol_istate_list: '[' symbol_list ']' .

    $default  reduce using rule 10 (symbol_istate_list)


State 43

   12 symbol_list: symbol_list ',' . SYMBOL

    SYMBOL  shift, and go to state 69


State 44

    9 node_attr_decl: symbol_istate_list '.' SYMBOL . '=' istate_expression_list ';'

    '='  shift, and go to state 70


State 45

   26 postfix_expression: SYMBOL '(' . argument_expression_list ')'
   27                   | SYMBOL '(' . ')'

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    ')'       shift, and go to state 71
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    argument_expression_list   go to state 72
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 73


State 46

   32 unary_expression: LOGNOT unary_expression .

    $default  reduce using rule 32 (unary_expression)


State 47

   22 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 74


State 48

   29 unary_expression: '+' unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 49

   30 unary_expression: '-' unary_expression .

    $default  reduce using rule 30 (unary_expression)


State 50

   31 unary_expression: '!' unary_expression .

    $default  reduce using rule 31 (unary_expression)


State 51

   34 multiplicative_expression: multiplicative_expression '*' . unary_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression  go to state 28
    postfix_expression  go to state 29
    unary_expression    go to state 75


State 52

   35 multiplicative_expression: multiplicative_expression '/' . unary_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression  go to state 28
    postfix_expression  go to state 29
    unary_expression    go to state 76


State 53

   37 additive_expression: additive_expression '+' . multiplicative_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 77


State 54

   38 additive_expression: additive_expression '-' . multiplicative_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 78


State 55

   43 relational_expression: relational_expression GTEQ . additive_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 79


State 56

   42 relational_expression: relational_expression LTEQ . additive_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 80


State 57

   40 relational_expression: relational_expression '<' . additive_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 81


State 58

   41 relational_expression: relational_expression '>' . additive_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 82


State 59

   45 equality_expression: equality_expression EQUAL . relational_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 83


State 60

   46 equality_expression: equality_expression NOT_EQUAL . relational_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 84


State 61

   48 logical_and_expression: logical_and_expression LOGAND . equality_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 85


State 62

   50 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 86


State 63

   52 logical_xor_expression: logical_xor_expression LOGXOR . logical_or_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 87


State 64

   53 logical_xor_expression: logical_xor_expression '^' . logical_or_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 88


State 65

   55 conditional_expression: logical_xor_expression '?' . expression ':' conditional_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 89


State 66

   18 var_decl: VARIABLE '=' expression ';' .

    $default  reduce using rule 18 (var_decl)


State 67

    7 runconfig_decl: SYMBOL '=' expression ';' .

    $default  reduce using rule 7 (runconfig_decl)


State 68

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' . expression ';'

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 90


State 69

   12 symbol_list: symbol_list ',' SYMBOL .

    $default  reduce using rule 12 (symbol_list)


State 70

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' . istate_expression_list ';'

    VARIABLE  shift, and go to state 19
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    '('       shift, and go to state 24

    istate_expression_list  go to state 91
    istate_expression       go to state 92
    primary_expression      go to state 93


State 71

   27 postfix_expression: SYMBOL '(' ')' .

    $default  reduce using rule 27 (postfix_expression)


State 72

   24 argument_expression_list: argument_expression_list . ',' expression
   26 postfix_expression: SYMBOL '(' argument_expression_list . ')'

    ','  shift, and go to state 94
    ')'  shift, and go to state 95


State 73

   23 argument_expression_list: expression .

    $default  reduce using rule 23 (argument_expression_list)


State 74

   22 primary_expression: '(' expression ')' .

    $default  reduce using rule 22 (primary_expression)


State 75

   34 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 76

   35 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 77

   34 multiplicative_expression: multiplicative_expression . '*' unary_expression
   35                          | multiplicative_expression . '/' unary_expression
   37 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 37 (additive_expression)


State 78

   34 multiplicative_expression: multiplicative_expression . '*' unary_expression
   35                          | multiplicative_expression . '/' unary_expression
   38 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 38 (additive_expression)


State 79

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   43 relational_expression: relational_expression GTEQ additive_expression .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 43 (relational_expression)


State 80

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   42 relational_expression: relational_expression LTEQ additive_expression .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 42 (relational_expression)


State 81

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   40 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 40 (relational_expression)


State 82

   37 additive_expression: additive_expression . '+' multiplicative_expression
   38                    | additive_expression . '-' multiplicative_expression
   41 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 41 (relational_expression)


State 83

   40 relational_expression: relational_expression . '<' additive_expression
   41                      | relational_expression . '>' additive_expression
   42                      | relational_expression . LTEQ additive_expression
   43                      | relational_expression . GTEQ additive_expression
   45 equality_expression: equality_expression EQUAL relational_expression .

    GTEQ  shift, and go to state 55
    LTEQ  shift, and go to state 56
    '<'   shift, and go to state 57
    '>'   shift, and go to state 58

    $default  reduce using rule 45 (equality_expression)


State 84

   40 relational_expression: relational_expression . '<' additive_expression
   41                      | relational_expression . '>' additive_expression
   42                      | relational_expression . LTEQ additive_expression
   43                      | relational_expression . GTEQ additive_expression
   46 equality_expression: equality_expression NOT_EQUAL relational_expression .

    GTEQ  shift, and go to state 55
    LTEQ  shift, and go to state 56
    '<'   shift, and go to state 57
    '>'   shift, and go to state 58

    $default  reduce using rule 46 (equality_expression)


State 85

   45 equality_expression: equality_expression . EQUAL relational_expression
   46                    | equality_expression . NOT_EQUAL relational_expression
   48 logical_and_expression: logical_and_expression LOGAND equality_expression .

    EQUAL      shift, and go to state 59
    NOT_EQUAL  shift, and go to state 60

    $default  reduce using rule 48 (logical_and_expression)


State 86

   48 logical_and_expression: logical_and_expression . LOGAND equality_expression
   50 logical_or_expression: logical_or_expression LOGOR logical_and_expression .

    LOGAND  shift, and go to state 61

    $default  reduce using rule 50 (logical_or_expression)


State 87

   50 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   52 logical_xor_expression: logical_xor_expression LOGXOR logical_or_expression .

    LOGOR  shift, and go to state 62

    $default  reduce using rule 52 (logical_xor_expression)


State 88

   50 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   53 logical_xor_expression: logical_xor_expression '^' logical_or_expression .

    LOGOR  shift, and go to state 62

    $default  reduce using rule 53 (logical_xor_expression)


State 89

   55 conditional_expression: logical_xor_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 96


State 90

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression . ';'

    ';'  shift, and go to state 97


State 91

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list . ';'
   14 istate_expression_list: istate_expression_list . ',' istate_expression

    ';'  shift, and go to state 98
    ','  shift, and go to state 99


State 92

   13 istate_expression_list: istate_expression .

    $default  reduce using rule 13 (istate_expression_list)


State 93

   15 istate_expression: primary_expression . '[' expression_list ']'

    '['  shift, and go to state 100


State 94

   24 argument_expression_list: argument_expression_list ',' . expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 38
    expression                 go to state 101


State 95

   26 postfix_expression: SYMBOL '(' argument_expression_list ')' .

    $default  reduce using rule 26 (postfix_expression)


State 96

   55 conditional_expression: logical_xor_expression '?' expression ':' . conditional_expression

    VARIABLE  shift, and go to state 19
    SYMBOL    shift, and go to state 20
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    LOGNOT    shift, and go to state 23
    '('       shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '!'       shift, and go to state 27

    primary_expression         go to state 28
    postfix_expression         go to state 29
    unary_expression           go to state 30
    multiplicative_expression  go to state 31
    additive_expression        go to state 32
    relational_expression      go to state 33
    equality_expression        go to state 34
    logical_and_expression     go to state 35
    logical_or_expression      go to state 36
    logical_xor_expression     go to state 37
    conditional_expression     go to state 102


State 97

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';' .

    $default  reduce using rule 8 (node_attr_decl)


State 98

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list ';' .

    $default  reduce using rule 9 (node_attr_decl)


State 99

   14 istate_expression_list: istate_expression_list ',' . istate_expression

    VARIABLE  shift, and go to state 19
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    '('       shift, and go to state 24

    istate_expression   go to state 103
    primary_expression  go to state 93


State 100

   15 istate_expression: primary_expression '[' . expression_list ']'

    VARIABLE  shift, and go to state 19
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    '('       shift, and go to state 24

    expression_list     go to state 104
    primary_expression  go to state 105


State 101

   24 argument_expression_list: argument_expression_list ',' expression .

    $default  reduce using rule 24 (argument_expression_list)


State 102

   55 conditional_expression: logical_xor_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 55 (conditional_expression)


State 103

   14 istate_expression_list: istate_expression_list ',' istate_expression .

    $default  reduce using rule 14 (istate_expression_list)


State 104

   15 istate_expression: primary_expression '[' expression_list . ']'
   17 expression_list: expression_list . ',' primary_expression

    ']'  shift, and go to state 106
    ','  shift, and go to state 107


State 105

   16 expression_list: primary_expression .

    $default  reduce using rule 16 (expression_list)


State 106

   15 istate_expression: primary_expression '[' expression_list ']' .

    $default  reduce using rule 15 (istate_expression)


State 107

   17 expression_list: expression_list ',' . primary_expression

    VARIABLE  shift, and go to state 19
    DOUBLE    shift, and go to state 21
    INTEGER   shift, and go to state 22
    '('       shift, and go to state 24

    primary_expression  go to state 108


State 108

   17 expression_list: expression_list ',' primary_expression .

    $default  reduce using rule 17 (expression_list)
